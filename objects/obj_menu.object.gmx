<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>top = 625;
padding = 10;
height = 150;
width = 600;
lineSpacing = 30;
graphSpeed = 5;
graphSize = 200;
time = 0;
barWidth = 2;
alarm[0] = graphSpeed;

rot = 0; //rotation of menu images

//initialize lifeHistory graph
for (i=0; i&lt;=graphSize; i+=1) {
    lifeHistory[i] = 0;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time++;
//move each value back one 
for (i=graphSize; i&gt;0; i--) {
    lifeHistory[i] = lifeHistory[i-1];
}
lifeHistory[0] = obj_controller.life;
alarm[0] = graphSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rot++; //rotate images
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//background
draw_sprite(spr_menu,0,0,750-170);

if (obj_controller.state = "orbit") {
draw_set_halign(fa_left);

//icons
draw_set_colour(c_white);
draw_set_font(fnt_regular);
draw_sprite_ext(spr_asteroid,0,padding+25,top+padding+20,1.2,1.2,rot,c_black,1);
draw_sprite_ext(spr_asteroid,0,padding+25,top+padding+20,1,1,rot,c_white,1);

draw_sprite_ext(spr_water1,0,padding+25,top+padding+lineSpacing+20,0.5*1.2,0.5*1.2,rot,c_black,1);
draw_sprite_ext(spr_water1,0,padding+25,top+padding+lineSpacing+20,0.5,0.5,rot,c_white,1);

draw_sprite_ext(spr_nutrients,0,padding+25,top+padding+lineSpacing*2+20,0.4*1.2,0.4*1.2,rot,c_black,1);
draw_sprite_ext(spr_nutrients,0,padding+25,top+padding+lineSpacing*2+20,0.4,0.4,rot,c_white,1);

var boxWidth = 280;
var boxHeight = 25;
var boxLeftMargin = 75;

//draw backgrounds
draw_set_color(make_color_rgb(235, 227, 163));
draw_rectangle(boxLeftMargin, top+padding,               boxLeftMargin+boxWidth, top+padding+boxHeight,false);
draw_set_color(make_color_rgb(83, 240, 252));
draw_rectangle(boxLeftMargin, top+padding*2+boxHeight,   boxLeftMargin+boxWidth, top+padding*2+boxHeight*2,false); 
draw_set_color(make_color_rgb(17, 255, 164));
draw_rectangle(boxLeftMargin, top+padding*3+boxHeight*2, boxLeftMargin+boxWidth, top+padding*3+boxHeight*3,false);

//draw bars
var damageRatio = obj_controller.damage/obj_controller.damageMax;
var waterRatio = obj_controller.water/obj_controller.waterMax;
var nutRatio = obj_controller.nut/obj_controller.nutMax;
draw_set_color(make_color_rgb(207,171,90));
draw_rectangle(boxLeftMargin, top+padding,               boxLeftMargin+boxWidth*damageRatio, top+padding+boxHeight,false);
draw_rectangle(boxLeftMargin, top+padding*2+boxHeight,   boxLeftMargin+boxWidth*waterRatio, top+padding*2+boxHeight*2,false); 
draw_rectangle(boxLeftMargin, top+padding*3+boxHeight*2, boxLeftMargin+boxWidth*nutRatio, top+padding*3+boxHeight*3,false);

//draw outlines
draw_set_color(c_black);
draw_rectangle(boxLeftMargin, top+padding,               boxLeftMargin+boxWidth, top+padding+boxHeight,true);
draw_rectangle(boxLeftMargin, top+padding*2+boxHeight,   boxLeftMargin+boxWidth, top+padding*2+boxHeight*2,true); 
draw_rectangle(boxLeftMargin, top+padding*3+boxHeight*2, boxLeftMargin+boxWidth, top+padding*3+boxHeight*3,true);

//draw numbers
draw_set_font(fnt_large);
draw_set_valign(fa_center);
draw_set_halign(fa_center);
var chang = 5;
draw_set_color(make_color_rgb(207,171,90));
draw_text(padding+boxWidth/2+66,top+padding+20-chang, round(obj_controller.damage));
draw_text(padding+boxWidth/2+66,top+padding+lineSpacing+20, round(obj_controller.water));
draw_text(padding+boxWidth/2+66,top+padding+lineSpacing*2+20+chang, round(obj_controller.nut));

draw_set_font(fnt_regular);
draw_set_color(c_white);
draw_text(padding+boxWidth/2+66,top+padding+20-chang, round(obj_controller.damage));
draw_text(padding+boxWidth/2+66,top+padding+lineSpacing+20, round(obj_controller.water));
draw_text(padding+boxWidth/2+66,top+padding+lineSpacing*2+20+chang, round(obj_controller.nut));
draw_set_valign(fa_top);
draw_set_halign(fa_left);

//draw year
draw_set_color(c_white);
draw_set_valign(fa_bottom);
draw_set_font(fnt_tiny);
draw_text(490-30, 750, "Year");
draw_text(540-35, 750, round(obj_controller.year));


//graph
var gPadding = 30;
var graphHeight = 100;
var up = 30;
var right = 8;

//draw level
draw_text(width-gPadding-graphSize+right,750,"LEVEL");
draw_text(width-gPadding-graphSize+right+55,750,obj_controller.lifeLevel+1);

//background
draw_set_color(make_color_rgb(207,171,90));
draw_rectangle(width-gPadding-graphSize+right-1,
               top+gPadding-up,
               width -gPadding+right+1,
               top+gPadding +graphHeight -up -1,false);

for (i=0; i&lt;=graphSize; i++) {
    draw_rectangle_color(width - gPadding - i+right,
                   top + gPadding + graphHeight -up,
                   width - gPadding - i + barWidth+right,
                   top + gPadding + graphHeight - lifeHistory[i] -up,
                   make_color_rgb(131, 222, 44), make_color_rgb(131, 222, 44),
                   make_color_rgb(17, 255, 164), make_color_rgb(17, 255, 164), false);
}
//graph outline
draw_set_color(c_black);
draw_rectangle(width-gPadding-graphSize+right-1,
               top+gPadding-up,
               width -gPadding+right+1,
               top+gPadding +graphHeight -up,true);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

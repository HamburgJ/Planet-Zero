<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_nutrients</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocityX = 0;
velocityY = 0;
hasBeenOnScreen=false;
size = random_range(0.3,0.5);
image_xscale=size;
image_yscale=size;
rotationSpeed = random_range(-1,1);
image_angle = random_range(0,360);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += velocityX*obj_controller.timeSpeed;
y += velocityY*obj_controller.timeSpeed;
if !(room_width&gt;x&gt;0) or !(room_height&gt;y&gt;0) {
    instance_destroy();
}
//set variable once instance has been on screen
if ((bbox_right &gt; view_xview[0]) &amp;&amp; (bbox_left &lt; view_xview[0] + view_wview[0]) &amp;&amp; (bbox_bottom &gt; view_yview[0]) &amp;&amp; (bbox_top &lt; view_yview[0] + view_hview[0])) {
   hasBeenOnScreen = true;
}

// if instance is off screen after being on screen, delete
if hasBeenOnScreen and !((bbox_right &gt; view_xview[0]) &amp;&amp; (bbox_left &lt; view_xview[0] + view_wview[0]) &amp;&amp; (bbox_bottom &gt; view_yview[0]) &amp;&amp; (bbox_top &lt; view_yview[0] + view_hview[0])) {
   instance_destroy();
}
image_angle += rotationSpeed*obj_controller.timeSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_planet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nutAdd = random_range(1,2);

obj_controller.nut+= nutAdd;
//sound
//audio_sound_pitch(0, random_range(0.9,1.1));
audio_play_sound(snd_nut,0,false);

//create number 
with(instance_create(obj_planet.x,obj_planet.y,obj_number)) {
    type = "nutrients";
    value = other.nutAdd;
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sun">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Sname = part_system_create()

//particles
particle1 = part_type_create();
part_type_sprite(particle1,spr_nutPart,false,0,0);
part_type_size(particle1,0.25,0.5,-0.01,0);
part_type_scale(particle1,1,1);
part_type_color1(particle1,16777215);
part_type_alpha1(particle1,1);
part_type_speed(particle1,2,3,0,0);
part_type_life(particle1,10,40);
part_type_orientation(particle1,0,360,10,0,0);
part_system_depth(Sname,-1);
part_type_direction(particle1,0,360,0,0);
part_type_orientation(particle1,0,360,0,0,0);

emitter1 = part_emitter_create(Sname);
part_emitter_region(Sname,emitter1,x-5,x+5,y-5,y+5,ps_shape_ellipse,1);
part_emitter_burst(Sname,emitter1,particle1,irandom(5)+5);


instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_nutrients,0,x,y,image_xscale,image_yscale,image_angle,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
